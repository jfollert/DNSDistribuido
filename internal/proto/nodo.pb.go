// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.4
// source: nodo.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Vacio struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Vacio) Reset() {
	*x = Vacio{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nodo_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vacio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vacio) ProtoMessage() {}

func (x *Vacio) ProtoReflect() protoreflect.Message {
	mi := &file_nodo_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vacio.ProtoReflect.Descriptor instead.
func (*Vacio) Descriptor() ([]byte, []int) {
	return file_nodo_proto_rawDescGZIP(), []int{0}
}

type Estado struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Estado string `protobuf:"bytes,1,opt,name=estado,proto3" json:"estado,omitempty"`
}

func (x *Estado) Reset() {
	*x = Estado{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nodo_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Estado) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Estado) ProtoMessage() {}

func (x *Estado) ProtoReflect() protoreflect.Message {
	mi := &file_nodo_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Estado.ProtoReflect.Descriptor instead.
func (*Estado) Descriptor() ([]byte, []int) {
	return file_nodo_proto_rawDescGZIP(), []int{1}
}

func (x *Estado) GetEstado() string {
	if x != nil {
		return x.Estado
	}
	return ""
}

type Consulta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NombreDominio string `protobuf:"bytes,1,opt,name=nombreDominio,proto3" json:"nombreDominio,omitempty"`
	Ip            string `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Port          string `protobuf:"bytes,3,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *Consulta) Reset() {
	*x = Consulta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nodo_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Consulta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Consulta) ProtoMessage() {}

func (x *Consulta) ProtoReflect() protoreflect.Message {
	mi := &file_nodo_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Consulta.ProtoReflect.Descriptor instead.
func (*Consulta) Descriptor() ([]byte, []int) {
	return file_nodo_proto_rawDescGZIP(), []int{2}
}

func (x *Consulta) GetNombreDominio() string {
	if x != nil {
		return x.NombreDominio
	}
	return ""
}

func (x *Consulta) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *Consulta) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

type ConsultaAdmin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NombreDominio string `protobuf:"bytes,1,opt,name=nombreDominio,proto3" json:"nombreDominio,omitempty"`
}

func (x *ConsultaAdmin) Reset() {
	*x = ConsultaAdmin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nodo_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConsultaAdmin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsultaAdmin) ProtoMessage() {}

func (x *ConsultaAdmin) ProtoReflect() protoreflect.Message {
	mi := &file_nodo_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsultaAdmin.ProtoReflect.Descriptor instead.
func (*ConsultaAdmin) Descriptor() ([]byte, []int) {
	return file_nodo_proto_rawDescGZIP(), []int{3}
}

func (x *ConsultaAdmin) GetNombreDominio() string {
	if x != nil {
		return x.NombreDominio
	}
	return ""
}

type ConsultaUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NombreDominio string `protobuf:"bytes,1,opt,name=nombreDominio,proto3" json:"nombreDominio,omitempty"`
	Opcion        string `protobuf:"bytes,2,opt,name=opcion,proto3" json:"opcion,omitempty"`
	Param         string `protobuf:"bytes,3,opt,name=param,proto3" json:"param,omitempty"`
}

func (x *ConsultaUpdate) Reset() {
	*x = ConsultaUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nodo_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConsultaUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsultaUpdate) ProtoMessage() {}

func (x *ConsultaUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_nodo_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsultaUpdate.ProtoReflect.Descriptor instead.
func (*ConsultaUpdate) Descriptor() ([]byte, []int) {
	return file_nodo_proto_rawDescGZIP(), []int{4}
}

func (x *ConsultaUpdate) GetNombreDominio() string {
	if x != nil {
		return x.NombreDominio
	}
	return ""
}

func (x *ConsultaUpdate) GetOpcion() string {
	if x != nil {
		return x.Opcion
	}
	return ""
}

func (x *ConsultaUpdate) GetParam() string {
	if x != nil {
		return x.Param
	}
	return ""
}

type Respuesta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip        string  `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Port      string  `protobuf:"bytes,2,opt,name=port,proto3" json:"port,omitempty"`
	Respuesta string  `protobuf:"bytes,3,opt,name=respuesta,proto3" json:"respuesta,omitempty"`
	Reloj     []int32 `protobuf:"varint,4,rep,packed,name=reloj,proto3" json:"reloj,omitempty"`
}

func (x *Respuesta) Reset() {
	*x = Respuesta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nodo_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Respuesta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Respuesta) ProtoMessage() {}

func (x *Respuesta) ProtoReflect() protoreflect.Message {
	mi := &file_nodo_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Respuesta.ProtoReflect.Descriptor instead.
func (*Respuesta) Descriptor() ([]byte, []int) {
	return file_nodo_proto_rawDescGZIP(), []int{5}
}

func (x *Respuesta) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *Respuesta) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

func (x *Respuesta) GetRespuesta() string {
	if x != nil {
		return x.Respuesta
	}
	return ""
}

func (x *Respuesta) GetReloj() []int32 {
	if x != nil {
		return x.Reloj
	}
	return nil
}

type RespuestaAdmin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reloj []int32 `protobuf:"varint,1,rep,packed,name=reloj,proto3" json:"reloj,omitempty"`
}

func (x *RespuestaAdmin) Reset() {
	*x = RespuestaAdmin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nodo_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespuestaAdmin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespuestaAdmin) ProtoMessage() {}

func (x *RespuestaAdmin) ProtoReflect() protoreflect.Message {
	mi := &file_nodo_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespuestaAdmin.ProtoReflect.Descriptor instead.
func (*RespuestaAdmin) Descriptor() ([]byte, []int) {
	return file_nodo_proto_rawDescGZIP(), []int{6}
}

func (x *RespuestaAdmin) GetReloj() []int32 {
	if x != nil {
		return x.Reloj
	}
	return nil
}

type File struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileInfo  string `protobuf:"bytes,1,opt,name=fileInfo,proto3" json:"fileInfo,omitempty"`
	ChunkData []byte `protobuf:"bytes,3,opt,name=chunkData,proto3" json:"chunkData,omitempty"`
}

func (x *File) Reset() {
	*x = File{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nodo_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_nodo_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_nodo_proto_rawDescGZIP(), []int{7}
}

func (x *File) GetFileInfo() string {
	if x != nil {
		return x.FileInfo
	}
	return ""
}

func (x *File) GetChunkData() []byte {
	if x != nil {
		return x.ChunkData
	}
	return nil
}

type Dominios struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dominios []string `protobuf:"bytes,1,rep,name=dominios,proto3" json:"dominios,omitempty"`
}

func (x *Dominios) Reset() {
	*x = Dominios{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nodo_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Dominios) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dominios) ProtoMessage() {}

func (x *Dominios) ProtoReflect() protoreflect.Message {
	mi := &file_nodo_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dominios.ProtoReflect.Descriptor instead.
func (*Dominios) Descriptor() ([]byte, []int) {
	return file_nodo_proto_rawDescGZIP(), []int{8}
}

func (x *Dominios) GetDominios() []string {
	if x != nil {
		return x.Dominios
	}
	return nil
}

var File_nodo_proto protoreflect.FileDescriptor

var file_nodo_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x6e, 0x6f, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x07, 0x0a, 0x05, 0x56, 0x61, 0x63, 0x69, 0x6f, 0x22, 0x20, 0x0a, 0x06,
	0x45, 0x73, 0x74, 0x61, 0x64, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x73, 0x74, 0x61, 0x64, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x73, 0x74, 0x61, 0x64, 0x6f, 0x22, 0x54,
	0x0a, 0x08, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6c, 0x74, 0x61, 0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x6f,
	0x6d, 0x62, 0x72, 0x65, 0x44, 0x6f, 0x6d, 0x69, 0x6e, 0x69, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x6e, 0x6f, 0x6d, 0x62, 0x72, 0x65, 0x44, 0x6f, 0x6d, 0x69, 0x6e, 0x69, 0x6f,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x6f, 0x72, 0x74, 0x22, 0x35, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6c, 0x74, 0x61,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x6f, 0x6d, 0x62, 0x72, 0x65, 0x44,
	0x6f, 0x6d, 0x69, 0x6e, 0x69, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x6f,
	0x6d, 0x62, 0x72, 0x65, 0x44, 0x6f, 0x6d, 0x69, 0x6e, 0x69, 0x6f, 0x22, 0x64, 0x0a, 0x0e, 0x43,
	0x6f, 0x6e, 0x73, 0x75, 0x6c, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a,
	0x0d, 0x6e, 0x6f, 0x6d, 0x62, 0x72, 0x65, 0x44, 0x6f, 0x6d, 0x69, 0x6e, 0x69, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x6f, 0x6d, 0x62, 0x72, 0x65, 0x44, 0x6f, 0x6d, 0x69,
	0x6e, 0x69, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x63, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x63, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x22, 0x63, 0x0a, 0x09, 0x52, 0x65, 0x73, 0x70, 0x75, 0x65, 0x73, 0x74, 0x61, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f,
	0x72, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x70, 0x75, 0x65, 0x73, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x73, 0x70, 0x75, 0x65, 0x73, 0x74, 0x61,
	0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x6c, 0x6f, 0x6a, 0x18, 0x04, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x05, 0x72, 0x65, 0x6c, 0x6f, 0x6a, 0x22, 0x26, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x70, 0x75, 0x65,
	0x73, 0x74, 0x61, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x6c, 0x6f,
	0x6a, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x72, 0x65, 0x6c, 0x6f, 0x6a, 0x22, 0x40,
	0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x44, 0x61, 0x74, 0x61,
	0x22, 0x26, 0x0a, 0x08, 0x44, 0x6f, 0x6d, 0x69, 0x6e, 0x69, 0x6f, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x6f, 0x6d, 0x69, 0x6e, 0x69, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x6f, 0x6d, 0x69, 0x6e, 0x69, 0x6f, 0x73, 0x32, 0x87, 0x03, 0x0a, 0x0c, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x69, 0x6f, 0x4e, 0x6f, 0x64, 0x6f, 0x12, 0x2f, 0x0a, 0x0d, 0x4f, 0x62, 0x74,
	0x65, 0x6e, 0x65, 0x72, 0x45, 0x73, 0x74, 0x61, 0x64, 0x6f, 0x12, 0x0f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6c, 0x74, 0x61, 0x1a, 0x0d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x73, 0x74, 0x61, 0x64, 0x6f, 0x12, 0x28, 0x0a, 0x03, 0x47, 0x65,
	0x74, 0x12, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6c,
	0x74, 0x61, 0x1a, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x75,
	0x65, 0x73, 0x74, 0x61, 0x12, 0x2b, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x0f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6c, 0x74, 0x61, 0x1a,
	0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x75, 0x65, 0x73, 0x74,
	0x61, 0x12, 0x35, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x14, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6c, 0x74, 0x61, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x1a, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x75, 0x65,
	0x73, 0x74, 0x61, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x36, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x75,
	0x6c, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x1a, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x75, 0x65, 0x73, 0x74, 0x61, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x12, 0x29, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x0f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6c, 0x74, 0x61, 0x1a, 0x0b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x30, 0x01, 0x12, 0x27, 0x0a, 0x07, 0x53,
	0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46,
	0x69, 0x6c, 0x65, 0x1a, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x73, 0x74, 0x61,
	0x64, 0x6f, 0x28, 0x01, 0x12, 0x2c, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x6d, 0x69, 0x6e,
	0x69, 0x6f, 0x73, 0x12, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x61, 0x63, 0x69,
	0x6f, 0x1a, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x6f, 0x6d, 0x69, 0x6e, 0x69,
	0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_nodo_proto_rawDescOnce sync.Once
	file_nodo_proto_rawDescData = file_nodo_proto_rawDesc
)

func file_nodo_proto_rawDescGZIP() []byte {
	file_nodo_proto_rawDescOnce.Do(func() {
		file_nodo_proto_rawDescData = protoimpl.X.CompressGZIP(file_nodo_proto_rawDescData)
	})
	return file_nodo_proto_rawDescData
}

var file_nodo_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_nodo_proto_goTypes = []interface{}{
	(*Vacio)(nil),          // 0: proto.Vacio
	(*Estado)(nil),         // 1: proto.Estado
	(*Consulta)(nil),       // 2: proto.Consulta
	(*ConsultaAdmin)(nil),  // 3: proto.ConsultaAdmin
	(*ConsultaUpdate)(nil), // 4: proto.ConsultaUpdate
	(*Respuesta)(nil),      // 5: proto.Respuesta
	(*RespuestaAdmin)(nil), // 6: proto.RespuestaAdmin
	(*File)(nil),           // 7: proto.File
	(*Dominios)(nil),       // 8: proto.Dominios
}
var file_nodo_proto_depIdxs = []int32{
	2, // 0: proto.ServicioNodo.ObtenerEstado:input_type -> proto.Consulta
	2, // 1: proto.ServicioNodo.Get:input_type -> proto.Consulta
	2, // 2: proto.ServicioNodo.Create:input_type -> proto.Consulta
	3, // 3: proto.ServicioNodo.Delete:input_type -> proto.ConsultaAdmin
	4, // 4: proto.ServicioNodo.Update:input_type -> proto.ConsultaUpdate
	2, // 5: proto.ServicioNodo.GetFile:input_type -> proto.Consulta
	7, // 6: proto.ServicioNodo.SetFile:input_type -> proto.File
	0, // 7: proto.ServicioNodo.GetDominios:input_type -> proto.Vacio
	1, // 8: proto.ServicioNodo.ObtenerEstado:output_type -> proto.Estado
	5, // 9: proto.ServicioNodo.Get:output_type -> proto.Respuesta
	5, // 10: proto.ServicioNodo.Create:output_type -> proto.Respuesta
	6, // 11: proto.ServicioNodo.Delete:output_type -> proto.RespuestaAdmin
	6, // 12: proto.ServicioNodo.Update:output_type -> proto.RespuestaAdmin
	7, // 13: proto.ServicioNodo.GetFile:output_type -> proto.File
	1, // 14: proto.ServicioNodo.SetFile:output_type -> proto.Estado
	8, // 15: proto.ServicioNodo.GetDominios:output_type -> proto.Dominios
	8, // [8:16] is the sub-list for method output_type
	0, // [0:8] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_nodo_proto_init() }
func file_nodo_proto_init() {
	if File_nodo_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_nodo_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vacio); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nodo_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Estado); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nodo_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Consulta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nodo_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConsultaAdmin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nodo_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConsultaUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nodo_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Respuesta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nodo_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespuestaAdmin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nodo_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*File); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nodo_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Dominios); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_nodo_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_nodo_proto_goTypes,
		DependencyIndexes: file_nodo_proto_depIdxs,
		MessageInfos:      file_nodo_proto_msgTypes,
	}.Build()
	File_nodo_proto = out.File
	file_nodo_proto_rawDesc = nil
	file_nodo_proto_goTypes = nil
	file_nodo_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ServicioNodoClient is the client API for ServicioNodo service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ServicioNodoClient interface {
	ObtenerEstado(ctx context.Context, in *Consulta, opts ...grpc.CallOption) (*Estado, error)
	Get(ctx context.Context, in *Consulta, opts ...grpc.CallOption) (*Respuesta, error)
	Create(ctx context.Context, in *Consulta, opts ...grpc.CallOption) (*Respuesta, error)
	Delete(ctx context.Context, in *ConsultaAdmin, opts ...grpc.CallOption) (*RespuestaAdmin, error)
	Update(ctx context.Context, in *ConsultaUpdate, opts ...grpc.CallOption) (*RespuestaAdmin, error)
	GetFile(ctx context.Context, in *Consulta, opts ...grpc.CallOption) (ServicioNodo_GetFileClient, error)
	SetFile(ctx context.Context, opts ...grpc.CallOption) (ServicioNodo_SetFileClient, error)
	GetDominios(ctx context.Context, in *Vacio, opts ...grpc.CallOption) (*Dominios, error)
}

type servicioNodoClient struct {
	cc grpc.ClientConnInterface
}

func NewServicioNodoClient(cc grpc.ClientConnInterface) ServicioNodoClient {
	return &servicioNodoClient{cc}
}

func (c *servicioNodoClient) ObtenerEstado(ctx context.Context, in *Consulta, opts ...grpc.CallOption) (*Estado, error) {
	out := new(Estado)
	err := c.cc.Invoke(ctx, "/proto.ServicioNodo/ObtenerEstado", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *servicioNodoClient) Get(ctx context.Context, in *Consulta, opts ...grpc.CallOption) (*Respuesta, error) {
	out := new(Respuesta)
	err := c.cc.Invoke(ctx, "/proto.ServicioNodo/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *servicioNodoClient) Create(ctx context.Context, in *Consulta, opts ...grpc.CallOption) (*Respuesta, error) {
	out := new(Respuesta)
	err := c.cc.Invoke(ctx, "/proto.ServicioNodo/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *servicioNodoClient) Delete(ctx context.Context, in *ConsultaAdmin, opts ...grpc.CallOption) (*RespuestaAdmin, error) {
	out := new(RespuestaAdmin)
	err := c.cc.Invoke(ctx, "/proto.ServicioNodo/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *servicioNodoClient) Update(ctx context.Context, in *ConsultaUpdate, opts ...grpc.CallOption) (*RespuestaAdmin, error) {
	out := new(RespuestaAdmin)
	err := c.cc.Invoke(ctx, "/proto.ServicioNodo/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *servicioNodoClient) GetFile(ctx context.Context, in *Consulta, opts ...grpc.CallOption) (ServicioNodo_GetFileClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ServicioNodo_serviceDesc.Streams[0], "/proto.ServicioNodo/GetFile", opts...)
	if err != nil {
		return nil, err
	}
	x := &servicioNodoGetFileClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ServicioNodo_GetFileClient interface {
	Recv() (*File, error)
	grpc.ClientStream
}

type servicioNodoGetFileClient struct {
	grpc.ClientStream
}

func (x *servicioNodoGetFileClient) Recv() (*File, error) {
	m := new(File)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *servicioNodoClient) SetFile(ctx context.Context, opts ...grpc.CallOption) (ServicioNodo_SetFileClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ServicioNodo_serviceDesc.Streams[1], "/proto.ServicioNodo/SetFile", opts...)
	if err != nil {
		return nil, err
	}
	x := &servicioNodoSetFileClient{stream}
	return x, nil
}

type ServicioNodo_SetFileClient interface {
	Send(*File) error
	CloseAndRecv() (*Estado, error)
	grpc.ClientStream
}

type servicioNodoSetFileClient struct {
	grpc.ClientStream
}

func (x *servicioNodoSetFileClient) Send(m *File) error {
	return x.ClientStream.SendMsg(m)
}

func (x *servicioNodoSetFileClient) CloseAndRecv() (*Estado, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(Estado)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *servicioNodoClient) GetDominios(ctx context.Context, in *Vacio, opts ...grpc.CallOption) (*Dominios, error) {
	out := new(Dominios)
	err := c.cc.Invoke(ctx, "/proto.ServicioNodo/GetDominios", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ServicioNodoServer is the server API for ServicioNodo service.
type ServicioNodoServer interface {
	ObtenerEstado(context.Context, *Consulta) (*Estado, error)
	Get(context.Context, *Consulta) (*Respuesta, error)
	Create(context.Context, *Consulta) (*Respuesta, error)
	Delete(context.Context, *ConsultaAdmin) (*RespuestaAdmin, error)
	Update(context.Context, *ConsultaUpdate) (*RespuestaAdmin, error)
	GetFile(*Consulta, ServicioNodo_GetFileServer) error
	SetFile(ServicioNodo_SetFileServer) error
	GetDominios(context.Context, *Vacio) (*Dominios, error)
}

// UnimplementedServicioNodoServer can be embedded to have forward compatible implementations.
type UnimplementedServicioNodoServer struct {
}

func (*UnimplementedServicioNodoServer) ObtenerEstado(context.Context, *Consulta) (*Estado, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ObtenerEstado not implemented")
}
func (*UnimplementedServicioNodoServer) Get(context.Context, *Consulta) (*Respuesta, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedServicioNodoServer) Create(context.Context, *Consulta) (*Respuesta, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedServicioNodoServer) Delete(context.Context, *ConsultaAdmin) (*RespuestaAdmin, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedServicioNodoServer) Update(context.Context, *ConsultaUpdate) (*RespuestaAdmin, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedServicioNodoServer) GetFile(*Consulta, ServicioNodo_GetFileServer) error {
	return status.Errorf(codes.Unimplemented, "method GetFile not implemented")
}
func (*UnimplementedServicioNodoServer) SetFile(ServicioNodo_SetFileServer) error {
	return status.Errorf(codes.Unimplemented, "method SetFile not implemented")
}
func (*UnimplementedServicioNodoServer) GetDominios(context.Context, *Vacio) (*Dominios, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDominios not implemented")
}

func RegisterServicioNodoServer(s *grpc.Server, srv ServicioNodoServer) {
	s.RegisterService(&_ServicioNodo_serviceDesc, srv)
}

func _ServicioNodo_ObtenerEstado_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Consulta)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServicioNodoServer).ObtenerEstado(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ServicioNodo/ObtenerEstado",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServicioNodoServer).ObtenerEstado(ctx, req.(*Consulta))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServicioNodo_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Consulta)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServicioNodoServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ServicioNodo/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServicioNodoServer).Get(ctx, req.(*Consulta))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServicioNodo_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Consulta)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServicioNodoServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ServicioNodo/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServicioNodoServer).Create(ctx, req.(*Consulta))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServicioNodo_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConsultaAdmin)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServicioNodoServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ServicioNodo/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServicioNodoServer).Delete(ctx, req.(*ConsultaAdmin))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServicioNodo_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConsultaUpdate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServicioNodoServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ServicioNodo/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServicioNodoServer).Update(ctx, req.(*ConsultaUpdate))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServicioNodo_GetFile_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Consulta)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ServicioNodoServer).GetFile(m, &servicioNodoGetFileServer{stream})
}

type ServicioNodo_GetFileServer interface {
	Send(*File) error
	grpc.ServerStream
}

type servicioNodoGetFileServer struct {
	grpc.ServerStream
}

func (x *servicioNodoGetFileServer) Send(m *File) error {
	return x.ServerStream.SendMsg(m)
}

func _ServicioNodo_SetFile_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ServicioNodoServer).SetFile(&servicioNodoSetFileServer{stream})
}

type ServicioNodo_SetFileServer interface {
	SendAndClose(*Estado) error
	Recv() (*File, error)
	grpc.ServerStream
}

type servicioNodoSetFileServer struct {
	grpc.ServerStream
}

func (x *servicioNodoSetFileServer) SendAndClose(m *Estado) error {
	return x.ServerStream.SendMsg(m)
}

func (x *servicioNodoSetFileServer) Recv() (*File, error) {
	m := new(File)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _ServicioNodo_GetDominios_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Vacio)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServicioNodoServer).GetDominios(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ServicioNodo/GetDominios",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServicioNodoServer).GetDominios(ctx, req.(*Vacio))
	}
	return interceptor(ctx, in, info, handler)
}

var _ServicioNodo_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.ServicioNodo",
	HandlerType: (*ServicioNodoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ObtenerEstado",
			Handler:    _ServicioNodo_ObtenerEstado_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _ServicioNodo_Get_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _ServicioNodo_Create_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _ServicioNodo_Delete_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _ServicioNodo_Update_Handler,
		},
		{
			MethodName: "GetDominios",
			Handler:    _ServicioNodo_GetDominios_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetFile",
			Handler:       _ServicioNodo_GetFile_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "SetFile",
			Handler:       _ServicioNodo_SetFile_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "nodo.proto",
}
